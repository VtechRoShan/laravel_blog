name: site-deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 8586-dev-relationships

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  site-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add SSH key to known hosts
        run: ssh-keyscan -t rsa ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Conditionally backup public/uploads directory
        run: ssh ubuntu@${{ secrets.HOST }} 'if [ -d "/home/ubuntu/laravel_blog/public/uploads" ]; then mkdir -p ~/backup_uploads && sudo mv /home/ubuntu/laravel_blog/public/uploads/ ~/backup_uploads/; fi'

      - name: Delete Existing Assets
        run: ssh ubuntu@${{ secrets.HOST }} 'cd /home/ubuntu/laravel_blog/ && sudo rm -rf ./*'

      - name: Sync project files
        run: |
          rsync -avh --exclude='/storage/*' --exclude='/vendor/*' --exclude='.git/' ./ ubuntu@${{ secrets.HOST }}:/home/ubuntu/laravel_blog/
        shell: bash

      - name: Move files if present and remove directory
        run: ssh ubuntu@${{ secrets.HOST }} 'if [ "$(ls -A ~/backup_uploads/)" ]; then sudo mv ~/backup_uploads/* /home/ubuntu/laravel_blog/public/uploads/; fi; sudo rm -rf ~/backup_uploads/'

      - name: Ensure storage directories exist
        run: ssh ubuntu@${{ secrets.HOST }} 'cd /home/ubuntu/laravel_blog/storage && mkdir -p framework/sessions framework/views framework/cache/data logs'

      - name: Set Directory Permissions for Storage
        run: |
          ssh ubuntu@${{ secrets.HOST }} 'sudo chmod -R 775 /home/ubuntu/laravel_blog/storage'
          ssh ubuntu@${{ secrets.HOST }} 'sudo chown -R www-data:www-data /home/ubuntu/laravel_blog/storage'

      # - name: Set Directory Permission for  Public Directory
      #   run: |
      #     ssh ubuntu@${{ secrets.HOST }} 'sudo chown -R www-data:www-data /home/ubuntu/laravel_blog/public/uploads'
      #     ssh ubuntu@${{ secrets.HOST }} 'sudo chmod -R 775 /home/ubuntu/laravel_blog/public/uploads'


      - name: Create .env file
        run: |
          echo "APP_NAME=ShamanKathmandu" >> .env
          echo "APP_ENV=local" >> .env
          echo "APP_KEY=base64:/" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_URL=https://shamankathmandu.com" >> .env

          echo "LOG_CHANNEL=stack" >> .env
          echo "LOG_DEPRECATIONS_CHANNEL=null" >> .env
          echo "LOG_LEVEL=debug" >> .env

          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST= 127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=shamanktm_ecommerce " >> .env
          echo "DB_USERNAME=shamanktm" >> .env
          echo "DB_PASSWORD=shamanktm" >> .env

          echo "BROADCAST_DRIVER=log" >> .env
          echo "CACHE_DRIVER=file" >> .env
          echo "FILESYSTEM_DISK=local" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env
          echo "SESSION_DRIVER=file" >> .env
          echo "SESSION_LIFETIME=120" >> .env

          echo "MEMCACHED_HOST=127.0.0.1" >> .env

          echo "REDIS_HOST=127.0.0.1" >> .env
          echo "REDIS_PASSWORD=null" >> .env
          echo "REDIS_PORT=6379" >> .env


        shell: bash

      - name: Transfer .env to server
        run: scp .env ubuntu@${{ secrets.HOST }}:/home/ubuntu/laravel_blog/
        shell: bash

      - name: Set Laravel log file permissions
        run: |
          ssh ubuntu@${{ secrets.HOST }} 'sudo touch /home/ubuntu/laravel_blog/storage/logs/laravel.log'
          ssh ubuntu@${{ secrets.HOST }} 'sudo chown www-data:www-data /home/ubuntu/laravel_blog/storage/logs/laravel.log'
          ssh ubuntu@${{ secrets.HOST }} 'sudo chmod 664 /home/ubuntu/laravel_blog/storage/logs/laravel.log'
        shell: bash

      - name: Set Laravel storage permissions
        run: |
          ssh ubuntu@${{ secrets.HOST }} 'sudo chown -R www-data:www-data /home/ubuntu/laravel_blog/storage'
          ssh ubuntu@${{ secrets.HOST }} 'sudo chmod -R 775 /home/ubuntu/laravel_blog/storage'

      - name: Install laravel/ui Package
        run: ssh ubuntu@${{ secrets.HOST }} 'cd /home/ubuntu/laravel_blog/ && sudo composer require laravel/ui'

      - name: Install Dependencies
        run: ssh ubuntu@${{ secrets.HOST }} 'cd /home/ubuntu/laravel_blog/ && composer install --no-dev'

      - name: Generate Application Key
        run: ssh ubuntu@${{ secrets.HOST }} 'cd /home/ubuntu/laravel_blog/ && php artisan key:generate'

      - name: Cache Configuration
        run: ssh ubuntu@${{ secrets.HOST }} 'cd /home/ubuntu/laravel_blog/ && php artisan config:cache && php artisan route:cache'

      - name: Run Migrations
        run: ssh ubuntu@${{ secrets.HOST }} 'cd /home/ubuntu/laravel_blog/ && php artisan migrate --no-interaction --force'

      - name: Set Laravel bootstrap/cache permissions
        run: |
          ssh ubuntu@${{ secrets.HOST }} 'sudo chown -R www-data:www-data /home/ubuntu/laravel_blog/bootstrap/cache'
          ssh ubuntu@${{ secrets.HOST }} 'sudo chmod -R 775 /home/ubuntu/laravel_blog/bootstrap/cache'
